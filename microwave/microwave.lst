;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 15/02/2020 01:40:20 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF000EF57  	GOTO        174
0x0004	0x0000      	NOP
0x0006	0x0000      	NOP
0x0008	0xF000EF00  	GOTO        0
0x000C	0x0000      	NOP
0x000E	0x0000      	NOP
0x0010	0x0000      	NOP
0x0012	0x0000      	NOP
0x0014	0x0000      	NOP
0x0016	0x0000      	NOP
0x0018	0xD7F3      	BRA         0
_SEGMENT7_vidDisplayDigit:
;segment7.c,33 :: 		unsigned char u8Digit)
;segment7.c,35 :: 		DISPLAY_SELECT = u8DisplaySelected;
0x001C	0xFFE1C01B  	MOVFF       _ptr_u16RegisterDisplaySelect, FSR1L
0x0020	0xFFE2C01C  	MOVFF       _ptr_u16RegisterDisplaySelect+1, FSR1H
0x0024	0xFFE6C020  	MOVFF       FARG_SEGMENT7_vidDisplayDigit_u8DisplaySelected, POSTINC1
;segment7.c,36 :: 		DISPLAY_DATA   = u8Digit;
0x0028	0xFFE1C019  	MOVFF       _ptr_u16RegisterDisplayData, FSR1L
0x002C	0xFFE2C01A  	MOVFF       _ptr_u16RegisterDisplayData+1, FSR1H
0x0030	0xFFE6C021  	MOVFF       FARG_SEGMENT7_vidDisplayDigit_u8Digit, POSTINC1
;segment7.c,37 :: 		}
L_end_SEGMENT7_vidDisplayDigit:
0x0034	0x0012      	RETURN      0
; end of _SEGMENT7_vidDisplayDigit
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x0036	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x0038	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x003C	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x003E	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x0040	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x0042	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
L_end___CC2DW:
0x0044	0x0012      	RETURN      0
; end of ___CC2DW
_Div_8x8_U:
;__Lib_Math.c,77 :: 		
;__Lib_Math.c,84 :: 		
0x0046	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,85 :: 		
0x0048	0x0E08      	MOVLW       8
;__Lib_Math.c,86 :: 		
0x004A	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,87 :: 		
0x004C	0x3400      	RLCF        R0, 0, 0
;__Lib_Math.c,88 :: 		
0x004E	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,89 :: 		
0x0050	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,90 :: 		
0x0052	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,91 :: 		
0x0054	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,92 :: 		
0x0056	0xD002      	BRA         $+6
;__Lib_Math.c,93 :: 		
0x0058	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,94 :: 		
0x005A	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,95 :: 		
0x005C	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,96 :: 		
0x005E	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,97 :: 		
0x0060	0xD7F5      	BRA         $-20
;__Lib_Math.c,99 :: 		
L_end_Div_8x8_U:
0x0062	0x0012      	RETURN      0
; end of _Div_8x8_U
_SEGMENT7_vidInit:
;segment7.c,19 :: 		unsigned char u8SelectionMask)
;segment7.c,21 :: 		ptr_u16DirectionDisplayData    = ptr_u16RegisterSegmentDataDirection;
0x0064	0xF015C020  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentDataDirection, _ptr_u16DirectionDisplayData
0x0068	0xF016C021  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentDataDirection+1, _ptr_u16DirectionDisplayData+1
;segment7.c,22 :: 		ptr_u16DirectionDisplaySelect  = ptr_u16RegisterSegmentSelectDirection;
0x006C	0xF017C022  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentSelectDirection, _ptr_u16DirectionDisplaySelect
0x0070	0xF018C023  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentSelectDirection+1, _ptr_u16DirectionDisplaySelect+1
;segment7.c,24 :: 		ptr_u16RegisterDisplayData     = ptr_u16RegisterSegmentData;
0x0074	0xF019C024  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentData, _ptr_u16RegisterDisplayData
0x0078	0xF01AC025  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentData+1, _ptr_u16RegisterDisplayData+1
;segment7.c,25 :: 		ptr_u16RegisterDisplaySelect   = ptr_u16RegisterSegmentSelect;
0x007C	0xF01BC026  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentSelect, _ptr_u16RegisterDisplaySelect
0x0080	0xF01CC027  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentSelect+1, _ptr_u16RegisterDisplaySelect+1
;segment7.c,27 :: 		DISPLAY_DIRECTION_DATA         &= MASK_DISPLAY_DATA_DIRECTION;
0x0084	0xFFE9C020  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentDataDirection, FSR0L
0x0088	0xFFEAC021  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentDataDirection+1, FSR0H
0x008C	0xFFE1C020  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentDataDirection, FSR1L
0x0090	0xFFE2C021  	MOVFF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentDataDirection+1, FSR1H
0x0094	0x0E00      	MOVLW       0
0x0096	0x16EE      	ANDWF       POSTINC0, 1 
;segment7.c,28 :: 		DISPLAY_DIRECTION_SELECTION    &= u8SelectionMask;
0x0098	0xFFE9C017  	MOVFF       _ptr_u16DirectionDisplaySelect, FSR0L
0x009C	0xFFEAC018  	MOVFF       _ptr_u16DirectionDisplaySelect+1, FSR0H
0x00A0	0xFFE1C017  	MOVFF       _ptr_u16DirectionDisplaySelect, FSR1L
0x00A4	0xFFE2C018  	MOVFF       _ptr_u16DirectionDisplaySelect+1, FSR1H
0x00A8	0x5028      	MOVF        FARG_SEGMENT7_vidInit_u8SelectionMask, 0 
0x00AA	0x16EE      	ANDWF       POSTINC0, 1 
;segment7.c,29 :: 		}
L_end_SEGMENT7_vidInit:
0x00AC	0x0012      	RETURN      0
; end of _SEGMENT7_vidInit
_main:
;main.c,39 :: 		void main() {
;main.c,42 :: 		unsigned char u8Index = 0;
0x00AE	0x6A1F      	CLRF        main_u8Index_L0 
;main.c,44 :: 		SEGMENT7_vidInit(MICROWAVE_REGISTER_DISPLAY_SELECT,
0x00B0	0x0E95      	MOVLW       TRISD
0x00B2	0x6E20      	MOVWF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentDataDirection 
0x00B4	0x0E0F      	MOVLW       hi_addr(TRISD)
0x00B6	0x6E21      	MOVWF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentDataDirection+1 
;main.c,45 :: 		MICROWAVE_REGISTER_DISPLAY_DATA,
0x00B8	0x0E92      	MOVLW       TRISA
0x00BA	0x6E22      	MOVWF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentSelectDirection 
0x00BC	0x0E0F      	MOVLW       hi_addr(TRISA)
0x00BE	0x6E23      	MOVWF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentSelectDirection+1 
;main.c,46 :: 		MICROWAVE_DISPLAY,
0x00C0	0x0E83      	MOVLW       PORTD
0x00C2	0x6E24      	MOVWF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentData 
0x00C4	0x0E0F      	MOVLW       hi_addr(PORTD)
0x00C6	0x6E25      	MOVWF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentData+1 
;main.c,47 :: 		MICROWAVE_DISPLAY_SELECT,
0x00C8	0x0E80      	MOVLW       PORTA
0x00CA	0x6E26      	MOVWF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentSelect 
0x00CC	0x0E0F      	MOVLW       hi_addr(PORTA)
0x00CE	0x6E27      	MOVWF       FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentSelect+1 
;main.c,48 :: 		MASK_MICROWAVE_DISPLAY_SELECT);
0x00D0	0x0EC3      	MOVLW       195
0x00D2	0x6E28      	MOVWF       FARG_SEGMENT7_vidInit_u8SelectionMask 
0x00D4	0xDFC7      	RCALL       _SEGMENT7_vidInit
;main.c,50 :: 		time.seconds = 10;
0x00D6	0x0E0A      	MOVLW       10
0x00D8	0x6E1D      	MOVWF       _time 
;main.c,52 :: 		*MICROWAVE_REGISTER_LAMP &= ~(0xff);
0x00DA	0x0E00      	MOVLW       0
0x00DC	0x1693      	ANDWF       TRISB, 1 
;main.c,53 :: 		*MICROWAVE_LAMP &= ~(0xFF);
0x00DE	0x0E00      	MOVLW       0
0x00E0	0x1681      	ANDWF       PORTB, 1 
;main.c,55 :: 		while(time.seconds >= 0)
L_main0:
0x00E2	0x0E00      	MOVLW       0
0x00E4	0x5C1D      	SUBWF       _time, 0 
0x00E6	0xE34A      	BNC         L_main1
;main.c,57 :: 		for (u8Index = 0; u8Index < 200; u8Index += 1)
0x00E8	0x6A1F      	CLRF        main_u8Index_L0 
L_main2:
0x00EA	0x0EC8      	MOVLW       200
0x00EC	0x5C1F      	SUBWF       main_u8Index_L0, 0 
0x00EE	0xE240      	BC          L_main3
;main.c,59 :: 		SEGMENT7_vidDisplayDigit(MASK_SECONDS_UNITS,
0x00F0	0x0E20      	MOVLW       32
0x00F2	0x6E20      	MOVWF       FARG_SEGMENT7_vidDisplayDigit_u8DisplaySelected 
;main.c,60 :: 		numbers[(time.seconds % 10)]);
0x00F4	0x0E0A      	MOVLW       10
0x00F6	0x6E04      	MOVWF       R4 
0x00F8	0xF000C01D  	MOVFF       _time, R0
0x00FC	0xDFA4      	RCALL       _Div_8x8_U
0x00FE	0xF000C008  	MOVFF       R8, R0
0x0102	0x0E7E      	MOVLW       _numbers
0x0104	0x2400      	ADDWF       R0, 0 
0x0106	0x6EF6      	MOVWF       4086 
0x0108	0x0E01      	MOVLW       hi_addr(_numbers)
0x010A	0x6EF7      	MOVWF       TBLPTRH 
0x010C	0x0E00      	MOVLW       0
0x010E	0x22F7      	ADDWFC      TBLPTRH, 1 
0x0110	0x0E00      	MOVLW       higher_addr(_numbers)
0x0112	0x6EF8      	MOVWF       TBLPTRU 
0x0114	0x0E00      	MOVLW       0
0x0116	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0118	0x0009      	TBLRD*+
0x011A	0xF021CFF5  	MOVFF       TABLAT, FARG_SEGMENT7_vidDisplayDigit_u8Digit
0x011E	0xDF7E      	RCALL       _SEGMENT7_vidDisplayDigit
;main.c,62 :: 		Delay_us(2500);
0x0120	0x0E07      	MOVLW       7
0x0122	0x6E0C      	MOVWF       R12, 0
0x0124	0x0E7D      	MOVLW       125
0x0126	0x6E0D      	MOVWF       R13, 0
L_main5:
0x0128	0x2E0D      	DECFSZ      R13, 1, 0
0x012A	0xD7FE      	BRA         L_main5
0x012C	0x2E0C      	DECFSZ      R12, 1, 0
0x012E	0xD7FC      	BRA         L_main5
;main.c,64 :: 		SEGMENT7_vidDisplayDigit(MASK_SECONDS_TENS,
0x0130	0x0E10      	MOVLW       16
0x0132	0x6E20      	MOVWF       FARG_SEGMENT7_vidDisplayDigit_u8DisplaySelected 
;main.c,65 :: 		numbers[(time.seconds / 10)]);
0x0134	0x0E0A      	MOVLW       10
0x0136	0x6E04      	MOVWF       R4 
0x0138	0xF000C01D  	MOVFF       _time, R0
0x013C	0xDF84      	RCALL       _Div_8x8_U
0x013E	0x0E7E      	MOVLW       _numbers
0x0140	0x2400      	ADDWF       R0, 0 
0x0142	0x6EF6      	MOVWF       4086 
0x0144	0x0E01      	MOVLW       hi_addr(_numbers)
0x0146	0x6EF7      	MOVWF       TBLPTRH 
0x0148	0x0E00      	MOVLW       0
0x014A	0x22F7      	ADDWFC      TBLPTRH, 1 
0x014C	0x0E00      	MOVLW       higher_addr(_numbers)
0x014E	0x6EF8      	MOVWF       TBLPTRU 
0x0150	0x0E00      	MOVLW       0
0x0152	0x22F8      	ADDWFC      TBLPTRU, 1 
0x0154	0x0009      	TBLRD*+
0x0156	0xF021CFF5  	MOVFF       TABLAT, FARG_SEGMENT7_vidDisplayDigit_u8Digit
0x015A	0xDF60      	RCALL       _SEGMENT7_vidDisplayDigit
;main.c,67 :: 		Delay_us(2500);
0x015C	0x0E07      	MOVLW       7
0x015E	0x6E0C      	MOVWF       R12, 0
0x0160	0x0E7D      	MOVLW       125
0x0162	0x6E0D      	MOVWF       R13, 0
L_main6:
0x0164	0x2E0D      	DECFSZ      R13, 1, 0
0x0166	0xD7FE      	BRA         L_main6
0x0168	0x2E0C      	DECFSZ      R12, 1, 0
0x016A	0xD7FC      	BRA         L_main6
;main.c,57 :: 		for (u8Index = 0; u8Index < 200; u8Index += 1)
0x016C	0x2A1F      	INCF        main_u8Index_L0, 1 
;main.c,68 :: 		}
0x016E	0xD7BD      	BRA         L_main2
L_main3:
;main.c,70 :: 		*MICROWAVE_LAMP ^= MASK_LAMP;
0x0170	0x7881      	BTG         PORTB, 4 
;main.c,72 :: 		time.seconds -= 1;
0x0172	0x041D      	DECF        _time, 0 
0x0174	0x6E00      	MOVWF       R0 
0x0176	0xF01DC000  	MOVFF       R0, _time
;main.c,73 :: 		}
0x017A	0xD7B3      	BRA         L_main0
L_main1:
;main.c,74 :: 		}
L_end_main:
0x017C	0xD7FF      	BRA         $+0
; end of _main
;main.c,21 :: _numbers
0x017E	0x063F ;_numbers+0
0x0180	0x4F5B ;_numbers+2
0x0182	0x6D66 ;_numbers+4
0x0184	0x077D ;_numbers+6
0x0186	0x6F7F ;_numbers+8
; end of _numbers
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x001C      [26]    _SEGMENT7_vidDisplayDigit
0x0036      [16]    ___CC2DW
0x0046      [30]    _Div_8x8_U
0x0064      [74]    _SEGMENT7_vidInit
0x00AE     [208]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    R0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [1]    FLASH_Write_64_i_L0
0x0001       [1]    R1
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_16bit_JPEG_FileReadBytes_Result_L0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    __Lib_TFT_JPEG_FileRead_i_L0
0x0001       [1]    __Lib_TFT_JPEG_FileReadBytes_Result_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0001       [1]    UART1_Read___tmp_UART1_Read_L0
0x0002       [2]    strlen_cp_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    FLASH_Write_64_SaveINTCON_L0
0x0002       [1]    R2
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0002       [2]    memchr_s_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    R3
0x0003       [2]    Ltrim_original_L0
0x0003       [2]    MM_TotalFreeMemSize_Tot_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    MM_Init_i_L0
0x0003       [2]    __Lib_MmcFat16_f16_toInt_l_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [1]    R4
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strcat_cp_L0
0x0004       [2]    strncat_cp_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    __Lib_MemManager_MM_GetMemAlign_P_L0
0x0005       [2]    Ltrim_p_L0
0x0005       [2]    memmove_ff_L0
0x0005       [2]    LongWordToHex_input_half_L0
0x0005       [2]    LongIntToHex_input_half_L0
0x0005       [1]    R5
0x0005       [1]    MM_TotalFreeMemSize_i_L0
0x0006       [1]    __Lib_MemManager_MM_GetMemAlign_i_L0
0x0006       [1]    R6
0x0007       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bLength_L0
0x0007       [1]    R7
0x0007       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bLength_L0
0x0008       [1]    R8
0x0008       [1]    __Lib_TFT_JPEG_GenerateHuffmanTables_bTable_L0
0x0008       [1]    __Lib_TFT_16bit_JPEG_GenerateHuffmanTables_bTable_L0
0x0009       [1]    R9
0x0009       [4]    __Lib_MmcFat16_f16_toLong_l_L0
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0015       [2]    _ptr_u16DirectionDisplayData
0x0017       [2]    _ptr_u16DirectionDisplaySelect
0x0019       [2]    _ptr_u16RegisterDisplayData
0x001B       [2]    _ptr_u16RegisterDisplaySelect
0x001D       [2]    _time
0x001F       [1]    main_u8Index_L0
0x0020       [2]    FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentDataDirection
0x0020       [1]    FARG_SEGMENT7_vidDisplayDigit_u8DisplaySelected
0x0021       [1]    FARG_SEGMENT7_vidDisplayDigit_u8Digit
0x0022       [2]    FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentSelectDirection
0x0024       [2]    FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentData
0x0026       [2]    FARG_SEGMENT7_vidInit_ptr_u16RegisterSegmentSelect
0x0028       [1]    FARG_SEGMENT7_vidInit_u8SelectionMask
0x0F80       [1]    PORTA
0x0F81       [1]    PORTB
0x0F83       [1]    PORTD
0x0F92       [1]    TRISA
0x0F93       [1]    TRISB
0x0F95       [1]    TRISD
0x0FD8       [1]    STATUS
0x0FD9       [1]    FSR2L
0x0FDA       [1]    FSR2H
0x0FDE       [1]    POSTINC2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE2       [1]    FSR1H
0x0FE4       [1]    PREINC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEE       [1]    POSTINC0
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF7       [1]    TBLPTRH
0x0FF8       [1]    TBLPTRU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x017E      [10]    _numbers
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_end_main
  _main
  L_end_SEGMENT7_vidInit
  _SEGMENT7_vidInit
  L_end_SEGMENT7_vidDisplayDigit
  _SEGMENT7_vidDisplayDigit
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Div_8x8_U
  _Div_8x8_U
  L_end_Div_16x16_U
  _Div_16x16_U
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8x8_S
  _Div_8x8_S
  L_end_Mul_8x8_S
  _Mul_8x8_S
  L_end_Mul_16x16_U
  _Mul_16x16_U
  L_end_Mul_16x16_S
  _Mul_16x16_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  _CC2D_Loop1
  _CC2DL_Loop1
  L_loopCA2AWs
  L_loopCCA2AWs
  L_loopCS2Ss
  L_CS2Send
  L_loopCCS2Ss
  L_CCS2Send
  L_loopFZinSWs
  L_longjmp7
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end_____DoIFC
  _____DoIFC
  L_end_Swap
  _Swap
  L_end_setjmp
  _setjmp
  L_end_longjmp
  _longjmp
